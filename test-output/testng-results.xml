<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="17" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="EmployeeAPISuite" duration-ms="26871" started-at="2019-08-03T08:01:37Z" finished-at="2019-08-03T08:02:04Z">
    <groups>
    </groups>
    <test name="EmployeeAPITest" duration-ms="26871" started-at="2019-08-03T08:01:37Z" finished-at="2019-08-03T08:02:04Z">
      <class name="com.employeeapi.tests.TC001_Get_All_Employees">
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employeeapi.tests.TC001_Get_All_Employees@59ec2012]" name="getAllEmployees" is-config="true" duration-ms="6137" started-at="2019-08-03T08:01:37Z" finished-at="2019-08-03T08:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkHeader()[pri:0, instance:com.employeeapi.tests.TC001_Get_All_Employees@59ec2012]" name="checkHeader" duration-ms="12" started-at="2019-08-03T08:01:43Z" finished-at="2019-08-03T08:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.tests.TC001_Get_All_Employees@59ec2012]" name="checkResponseBody" duration-ms="311" started-at="2019-08-03T08:01:43Z" finished-at="2019-08-03T08:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.tests.TC001_Get_All_Employees@59ec2012]" name="checkStatusCode" duration-ms="1" started-at="2019-08-03T08:01:44Z" finished-at="2019-08-03T08:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.tests.TC001_Get_All_Employees@59ec2012]" name="checkStatusLine" duration-ms="0" started-at="2019-08-03T08:01:44Z" finished-at="2019-08-03T08:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- com.employeeapi.tests.TC001_Get_All_Employees -->
      <class name="com.employeeapi.tests.TC003_Post_Employee_Record">
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.tests.TC003_Post_Employee_Record@2f686d1f]" name="createEmployee" is-config="true" duration-ms="5602" started-at="2019-08-03T08:01:47Z" finished-at="2019-08-03T08:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkHeader()[pri:0, instance:com.employeeapi.tests.TC003_Post_Employee_Record@2f686d1f]" name="checkHeader" duration-ms="4" started-at="2019-08-03T08:01:53Z" finished-at="2019-08-03T08:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.tests.TC003_Post_Employee_Record@2f686d1f]" name="checkResponseBody" duration-ms="6" started-at="2019-08-03T08:01:53Z" finished-at="2019-08-03T08:01:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.employeeapi.tests.TC003_Post_Employee_Record.checkResponseBody(TC003_Post_Employee_Record.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.tests.TC003_Post_Employee_Record@2f686d1f]" name="checkStatusCode" duration-ms="3" started-at="2019-08-03T08:01:53Z" finished-at="2019-08-03T08:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.tests.TC003_Post_Employee_Record@2f686d1f]" name="checkStatusLine" duration-ms="2" started-at="2019-08-03T08:01:53Z" finished-at="2019-08-03T08:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- com.employeeapi.tests.TC003_Post_Employee_Record -->
      <class name="com.employeeapi.tests.TC005_Delete_Employee_Record">
        <test-method status="PASS" signature="deleteEmployee()[pri:0, instance:com.employeeapi.tests.TC005_Delete_Employee_Record@73ad2d6]" name="deleteEmployee" is-config="true" duration-ms="5515" started-at="2019-08-03T08:01:58Z" finished-at="2019-08-03T08:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployee -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.tests.TC005_Delete_Employee_Record@73ad2d6]" name="checkResponseBody" duration-ms="4" started-at="2019-08-03T08:02:04Z" finished-at="2019-08-03T08:02:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.employeeapi.tests.TC005_Delete_Employee_Record.checkResponseBody(TC005_Delete_Employee_Record.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
      </class> <!-- com.employeeapi.tests.TC005_Delete_Employee_Record -->
      <class name="com.employeeapi.tests.TC002_Get_Single_Employee_Record">
        <test-method status="PASS" signature="getEmployeeData()[pri:0, instance:com.employeeapi.tests.TC002_Get_Single_Employee_Record@4cf777e8]" name="getEmployeeData" is-config="true" duration-ms="3572" started-at="2019-08-03T08:01:44Z" finished-at="2019-08-03T08:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeData -->
        <test-method status="PASS" signature="checkHeader()[pri:0, instance:com.employeeapi.tests.TC002_Get_Single_Employee_Record@4cf777e8]" name="checkHeader" duration-ms="4" started-at="2019-08-03T08:01:47Z" finished-at="2019-08-03T08:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.tests.TC002_Get_Single_Employee_Record@4cf777e8]" name="checkResponseBody" duration-ms="3" started-at="2019-08-03T08:01:47Z" finished-at="2019-08-03T08:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.tests.TC002_Get_Single_Employee_Record@4cf777e8]" name="checkStatusCode" duration-ms="3" started-at="2019-08-03T08:01:47Z" finished-at="2019-08-03T08:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.tests.TC002_Get_Single_Employee_Record@4cf777e8]" name="checkStatusLine" duration-ms="4" started-at="2019-08-03T08:01:47Z" finished-at="2019-08-03T08:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- com.employeeapi.tests.TC002_Get_Single_Employee_Record -->
      <class name="com.employeeapi.tests.TC004_Put_Employee_Record">
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.tests.TC004_Put_Employee_Record@3fee9989]" name="createEmployee" is-config="true" duration-ms="5572" started-at="2019-08-03T08:01:53Z" finished-at="2019-08-03T08:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkHeader()[pri:0, instance:com.employeeapi.tests.TC004_Put_Employee_Record@3fee9989]" name="checkHeader" duration-ms="4" started-at="2019-08-03T08:01:58Z" finished-at="2019-08-03T08:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.tests.TC004_Put_Employee_Record@3fee9989]" name="checkResponseBody" duration-ms="3" started-at="2019-08-03T08:01:58Z" finished-at="2019-08-03T08:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.tests.TC004_Put_Employee_Record@3fee9989]" name="checkStatusCode" duration-ms="2" started-at="2019-08-03T08:01:58Z" finished-at="2019-08-03T08:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.tests.TC004_Put_Employee_Record@3fee9989]" name="checkStatusLine" duration-ms="2" started-at="2019-08-03T08:01:58Z" finished-at="2019-08-03T08:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- com.employeeapi.tests.TC004_Put_Employee_Record -->
    </test> <!-- EmployeeAPITest -->
  </suite> <!-- EmployeeAPISuite -->
</testng-results>
